version: "3.9"

services:
  db:
    image: timescale/timescaledb:2.14.2-pg15
    environment:
      POSTGRES_DB: traderai
      POSTGRES_USER: trader
      POSTGRES_PASSWORD: traderpass
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trader -d traderai"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - dbdata:/var/lib/postgresql/data

  redis:
    image: redis:7.2-alpine
    ports: ["6379:6379"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.20
    command:
      - redpanda start --overprovisioned --smp 1 --memory 1G --reserve-memory 0M
        --node-id 0 --check=false --set redpanda.enable_transactions=true
        --advertise-kafka-addr redpanda:9092 --kafka-addr PLAINTEXT://0.0.0.0:9092
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD-SHELL", "bash -c 'echo > /dev/tcp/127.0.0.1/9092'"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - redpandadata:/var/lib/redpanda/data

  api:
    build:
      context: ..
      dockerfile: infra/dockerfiles/api.Dockerfile
    env_file: ../.env
    environment:
      DATABASE_URL: postgresql+psycopg2://trader:traderpass@db:5432/traderai
      REDIS_URL: redis://redis:6379/0
      KAFKA_BROKERS: redpanda:9092
      API_PREFIX: /api
      NEXT_PUBLIC_API_URL: http://localhost:8000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      redpanda:
        condition: service_healthy
    ports: ["8000:8000"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ..
      dockerfile: infra/dockerfiles/web.Dockerfile
    env_file: ../.env
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
    depends_on:
      api:
        condition: service_healthy
    ports: ["3000:3000"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000"]
      interval: 15s
      timeout: 5s
      retries: 5

  ml-backfill:
    build:
      context: ..
      dockerfile: infra/dockerfiles/ml.Dockerfile
    env_file: ../.env
    environment:
      BACKFILL_MODE: loop
      DATABASE_URL: postgresql+psycopg2://trader:traderpass@db:5432/traderai
      REDIS_URL: redis://redis:6379/0
      KAFKA_BROKERS: redpanda:9092
    depends_on:
      db:
        condition: service_healthy
      redpanda:
        condition: service_healthy
    command: ["python", "-m", "apps.ml.backfill"]
    restart: unless-stopped

  events-consumer:
    build:
      context: ..
      dockerfile: infra/dockerfiles/ml.Dockerfile
    env_file: ../.env
    environment:
      API_INTERNAL_URL: http://api:8000
      KAFKA_BROKERS: redpanda:9092
      KAFKA_GROUP_ID: trader-ai-consumers
      EVENTS_TOPIC: traderai.events
      INTERNAL_SECRET: changeme
    depends_on:
      api:
        condition: service_healthy
      redpanda:
        condition: service_healthy
    command: ["python", "-m", "apps.ops.event_consumer"]
    restart: unless-stopped

volumes:
  dbdata: {}
  redpandadata: {}
