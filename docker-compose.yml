
version: "3.9"
services:
  db:
    image: timescale/timescaledb:2.14.2-pg15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks: [default]

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks: [default]

  kafka:
    image: docker.redpanda.com/redpandadata/redpanda:latest
    command:
      - redpanda start --overprovisioned --smp 1 --memory 1G --reserve-memory 0M --node-id 0
        --check=false --set redpanda.auto_create_topics_enabled=true
    ports:
      - "9092:9092"
    networks: [default]

  api:
    build:
      context: .
      dockerfile: infra/api.Dockerfile
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"
    command: bash -lc "alembic upgrade head && uvicorn apps.api.main:app --host 0.0.0.0 --port 8000"
    networks: [default]

  worker:
    build:
      context: .
      dockerfile: infra/worker.Dockerfile
    env_file: .env
    depends_on:
      - api
    command: python -m apps.ml.worker
    networks: [default]

  web:
    build:
      context: .
      dockerfile: infra/web.Dockerfile
    env_file: .env
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks: [default]

volumes:
  db_data:

networks:
  default:
    name: ${NETWORK_NAME}
