services:
  db:
    image: timescale/timescaledb:2.14.2-pg15
    environment:
      POSTGRES_DB: traderai
      POSTGRES_USER: trader
      POSTGRES_PASSWORD: traderpass
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trader -d traderai"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - dbdata:/var/lib/postgresql/data

  redis:
    image: redis:7.2-alpine
    ports: ["6379:6379"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: infra/dockerfiles/api.Dockerfile
    env_file: ./.env
    environment:
      DATABASE_URL: postgresql+psycopg2://trader:traderpass@db:5432/traderai
      REDIS_URL: redis://redis:6379/0
      API_PREFIX: /api
      NEXT_PUBLIC_API_URL: /api
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports: ["8000:8000"]
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "python - <<'PY'\nimport urllib.request,sys; urllib.request.urlopen('http://localhost:8000/healthz', timeout=3); sys.exit(0)\nPY",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: infra/dockerfiles/web.Dockerfile
    env_file: ./.env
    environment:
      NEXT_PUBLIC_API_URL: /api
      API_PROXY_URL: http://api:8000/api
      NEXT_PUBLIC_API_PREFIX: ""
    depends_on:
      api:
        condition: service_healthy
    ports: ["3000:3000"]
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "python - <<'PY'\nimport urllib.request,sys; urllib.request.urlopen('http://localhost:3000', timeout=3); sys.exit(0)\nPY",
        ]
      interval: 15s
      timeout: 5s
      retries: 5

  ml-backfill:
    build:
      context: .
      dockerfile: infra/dockerfiles/ml.Dockerfile
    env_file: ./.env
    environment:
      BACKFILL_MODE: loop
      DATABASE_URL: postgresql+psycopg2://trader:traderpass@db:5432/traderai
      REDIS_URL: redis://redis:6379/0
      API_INTERNAL_URL: http://api:8000
    depends_on:
      db:
        condition: service_healthy
    command: ["python", "-m", "apps.ml.backfill"]
    restart: unless-stopped

  ml-worker:
    build:
      context: .
      dockerfile: infra/dockerfiles/ml.Dockerfile
    env_file: ./.env
    environment:
      DATABASE_URL: postgresql+psycopg2://trader:traderpass@db:5432/traderai
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    command: ["celery", "-A", "apps.ml.worker", "worker", "-l", "info"]
    restart: unless-stopped

volumes:
  dbdata: {}
