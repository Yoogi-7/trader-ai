
name: trader_ai

networks:
  trader_ai_net:

volumes:
  trader_ai_db_data:

services:
  db:
    image: timescale/timescaledb:2.14.2-pg15
    container_name: trader_ai-db-1
    environment:
      - POSTGRES_USER=trader
      - POSTGRES_PASSWORD=trader
      - POSTGRES_DB=trader_ai
    ports:
      - "5432:5432"
    volumes:
      - trader_ai_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks: [trader_ai_net]

  redis:
    image: redis:7-alpine
    container_name: trader_ai-redis-1
    ports: ["6379:6379"]
    networks: [trader_ai_net]

  redpanda:
    image: redpandadata/redpanda:latest
    container_name: trader_ai-redpanda-1
    command:
      - redpanda start
        --overprovisioned
        --smp 1
        --memory 1G
        --reserve-memory 0M
        --node-id 0
        --check=false
        --kafka-addr 0.0.0.0:9092
        --advertise-kafka-addr redpanda:9092
        --rpc-addr 0.0.0.0:33145
        --advertise-rpc-addr redpanda:33145
    ports:
      - "9092:9092"
      - "9644:9644"
    networks: [trader_ai_net]

  api:
    build:
      context: .
      dockerfile: api.Dockerfile
    container_name: trader_ai-api-1
    env_file: [.env]
    depends_on:
      db: { condition: service_healthy }
      redis: { condition: service_started }
      redpanda: { condition: service_started }
    ports: ["8000:8000"]
    restart: unless-stopped
    networks: [trader_ai_net]

  worker:
    build:
      context: .
      dockerfile: worker.Dockerfile
    container_name: trader_ai-worker-1
    env_file: [.env]
    depends_on:
      - api
      - db
      - redis
      - redpanda
    command: [ "celery", "-A", "apps.ml.worker:app", "worker", "-l", "INFO" ]
    restart: unless-stopped
    networks: [trader_ai_net]

  web:
    build:
      context: .
      dockerfile: web.Dockerfile
    container_name: trader_ai-web-1
    env_file: [.env]
    depends_on:
      api: { condition: service_started }
    ports: ["3000:3000"]
    restart: unless-stopped
    networks: [trader_ai_net]
